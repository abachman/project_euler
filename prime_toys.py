import psyco
psyco.full()

from fast_prime import count_factors, factors, factorial, prime_factors
from p108 import solutions

#prod = lambda p: len(p) > 1 and p[0] * prod(p[1:]) or p[0]

###print prod([2,2,3])
###print prod([2,3,4])

#a = []
#add = lambda *l: a.append(l)
#add(2)
#add(2,2,2)
#add(2,2,3)
#add(2,3,3)
#add(2,2,2,3)
#add(2,2,3,3)
#add(2,3,3,3)
#add(2,2,3,5)
#add(2,3,3,5)
#add(2,2,2,3,3,5)
#add(2,2,2,2,3,3)
#add(2,2,2,3,3,3,5)
#add(2,2,3,3,4,7)

# Prime factorization tests for 108
# factorial(13)                                              ## 6227020800  1584
# pows = ((2, 10), (3, 5), (5, 2), (7, 1), (11, 1))                  ## 479001600   792    19
# pows = ((2, 11), (3, 6), (5, 3), (7, 1), (11, 0))                  ## 1306368000  672    21
# pows = ((2, 10), (3, 5), (5, 3), (7, 2), (11, 0))                  ## 1524096000  792    20
# pows = ((2, 10), (3, 5), (5, 3), (7, 1), (11, 1))                  ## 2395008000  1056   20
# pows = ((2, 10), (3, 5), (5, 2), (7, 1), (11, 0), (13, 1))         ## 566092800   792    19
# pows = ((2, 10), (3, 4), (5, 2), (7, 2), (11, 0), (13, 1))         ## 1320883200  990    19
# pows = ((2, 9), (3, 3), (5, 3), (7, 2), (11, 1), (13, 0))          ## 931392000   960    18
# pows = ((2, 10), (3, 3), (5, 3), (7, 2), (11, 1))                  ## 1862784000  1056   19
# pows = ((2, 8), (3, 3), (5, 4), (7, 2), (11, 1), (13, 0))          ## 2328480000  1080   18
# pows = ((2, 12), (3, 5), (5, 2), (7, 1), (11, 1))                  ## 1916006400  936    21
# pows = ((2, 9), (3, 5), (5, 3), (7, 1), (11, 1))                   ## 1197504000  960    19
# pows = ((2, 9), (3, 4), (5, 2), (7, 2), (11, 1))                   ## 558835200   900    18
# pows = ((2, 9), (3, 4), (5, 2), (7, 1), (11, 2))                   ## 878169600   900    18
# pows = ((2, 8), (3, 5), (5, 3), (7, 1), (11, 0), (13, 1))          ## 707616000   864    18
# pows = ((2, 9), (3, 5), (5, 3), (7, 1), (11, 0), (13, 1))          ## 1415232000  960    19
# pows = ((2, 10), (3, 4), (5, 2), (7, 2), (11, 1))                  ## 1117670400  990    19
# pows = ((2, 3), (3, 7), (5, 2), (7, 2), (11, 1))                   ## 235758600   576    15
# pows = ((2, 6), (3, 7), (5, 2), (7, 2), (11, 1))                   ## 1886068800  1008   18
# pows = ((2, 3), (3, 9), (5, 3), (7, 2), (11, 1))                   ## 10609137000 960    18
# pows = ((2, 4), (3, 5), (5, 4), (7, 2), (11, 1))                   ## 1309770000  900    16
# pows = ((2, 12), (3, 6), (5, 5), (7, 0), (11, 0))                  ## 9331200000  546    23
# pows = ((2, 7), (3, 3), (5, 3), (7, 1), (11, 1), (13, 1))          ## 432432000   1024   16 
# pows = ((2, 5), (3, 3), (5, 2), (7, 1), (11, 1), (13, 1), (17, 1)) ## 367567200   1152   14 !
# pows = ((2), (2), (2), (7, 1), (11, 1), (13, 1), (17, 1), (23, 1)) ## 352251900   864    11
# pows = ((2, 2), (3, 3), (5, 3), (7, 1), (11, 1), (13, 1), (17, 1)) ## 229729500   768    12
# pows = ((2, 4), (3, 3), (5, 2), (7, 1), (11, 1), (13, 1), (17, 1)) ## 183783600   960    13

#pows = ((2, 4), (3, 3), (5, 2), (7, 1), (11, 1), (13, 1), (17, 1))
#f12a = 1
#for po in pows:
#    f12a = f12a * pow(po[0], po[1])
#print '# pows = %-59s ## %-11s %-6s %s' % \
#      (str(pows), str(f12a), str(count_factors(f12a)), sum([n[1] for n in pows]))

## 
#t = [[2,0],[3,0],[5,0]]
#l = []
#for x in xrange(4):
#    t[0][1] = x
#    for y in xrange(4):
#        t[1][1] = y
#        for z in xrange(4):
#            t[2][1] = z
#            f = 1
#            for p in t:
#                f = f * pow(p[0],p[1])
#            l.append((f, count_factors(f)))
#l.sort()
#by_prod = [i for i in l]
#by_fact = sorted((i[1], i) for i in l)
#by_fact = [i[1] for i in by_fact]
#for x in range(len(by_fact)):
#    print by_prod[x], by_fact[x]

# m = 0 
# for i in xrange(300000000, 367567200):
    # c = count_factors(i)
    # if i % 10000 == 0: 
        # print i
    # if c > m:
        # print '*** ', i, c
        # m = c
        # if c >= 1000:
            # break
for f in prime_factors(300002400):
   print f, 
