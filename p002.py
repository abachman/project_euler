"""
2007-12-14

Each new term in the Fibonacci sequence is generated by adding the
previous two terms. By starting with 1 and 2, the first 10 terms will
be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

Find the sum of all the even-valued terms in the sequence which do not
exceed one million.
"""

def xfib(n):
    # find up to nth term
    c = 0
    sum = 0
    a = 0
    b = 1
    while c < n:
        temp = b
        b = a + b
        a = temp
        yield b
        sum += b
        c+=1
    
def nfib(n):
    return [i for i in xfib(n)][-1]

def solve():
    s = 0
    for i in xfib(100):
        if i > 1000000:
            break
        elif i % 2 == 0:
            s += i
    print s
    
def TEST():
    # http://en.wikipedia.org/wiki/Fibonacci_number
    nums = '''
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584,
    4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393'''
    nums = [int(n.strip()) for n in nums.split(',')]

    eq = lambda a,b: a==b
    assert all(eq(*args) for args in zip(xfib(len(nums)), nums))

if __name__=="__main__":
    #TEST()
    solve() # 1089154
        
